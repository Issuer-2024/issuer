name: Build and Deploy with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # 1. Python 3.10 세팅
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 2. 의존성 캐시
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 3. 의존성 설치 및 애플리케이션 테스트
      - name: Install dependencies and run tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # pytest  # Uncomment and configure your tests

      # 4. Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/issuer-app:latest .

      # 5. DockerHub 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 6. Docker Hub 이미지 푸시
      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/issuer-app:latest

  copy-files:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - uses: actions/checkout@v3

      - name: Copy file via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml"
          target: "/"

  deploy:
    runs-on: ubuntu-latest
    needs: copy-files

    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            export NAVER_API_CLIENT_ID=${{ secrets.NAVER_API_CLIENT_ID }}
            export NAVER_API_CLIENT_SECRET=${{ secrets.NAVER_API_CLIENT_SECRET }}
            export CLOVA_API_CLIENT_ID=${{ secrets.CLOVA_API_CLIENT_ID }}
            export CLOVA_API_CLIENT_SECRET=${{ secrets.CLOVA_API_CLIENT_SECRET }}
            export CLOVA_CHAT_COMPLETION_CLIENT_KEY=${{ secrets.CLOVA_CHAT_COMPLETION_CLIENT_KEY }}
            export CLOVA_CHAT_COMPLETION_CLIENT_KEY_PRIMARY_VAR=${{ secrets.CLOVA_CHAT_COMPLETION_CLIENT_KEY_PRIMARY_VAR }}
            export CLOVA_CHAT_COMPLETION_REQUEST_ID=${{ secrets.CLOVA_CHAT_COMPLETION_REQUEST_ID }}
            export CLOVA_EMBEDDING_CLIENT_KEY=${{ secrets.CLOVA_EMBEDDING_CLIENT_KEY }}
            export CLOVA_EMBEDDING_CLIENT_KEY_PRIMARY_VAR=${{ secrets.CLOVA_EMBEDDING_CLIENT_KEY_PRIMARY_VAR }}
            export CLOVA_EMBEDDING_REQUEST_ID=${{ secrets.CLOVA_EMBEDDING_REQUEST_ID }}
            export CLOVA_SUMMARY_CLIENT_KEY=${{ secrets.CLOVA_SUMMARY_CLIENT_KEY }}
            export CLOVA_SUMMARY_CLIENT_KEY_PRIMARY_VAR=${{ secrets.CLOVA_SUMMARY_CLIENT_KEY_PRIMARY_VAR }}
            export CLOVA_SUMMARY_REQUEST_ID=${{ secrets.CLOVA_SUMMARY_REQUEST_ID }}
            export CLOVA_CHAT_COMPLETION_003_CLIENT_KEY=${{ secrets.CLOVA_CHAT_COMPLETION_003_CLIENT_KEY }}
            export CLOVA_CHAT_COMPLETION_003_CLIENT_KEY_PRIMARY_VAR=${{ secrets.CLOVA_CHAT_COMPLETION_003_CLIENT_KEY_PRIMARY_VAR }}
            export CLOVA_CHAT_COMPLETION_003_CLIENT_KEY_REQUEST_ID=${{ secrets.CLOVA_CHAT_COMPLETION_003_CLIENT_KEY_REQUEST_ID }}
            
            cd /
            docker-compose pull
            docker-compose up -p issuer -d
            docker image prune -af
